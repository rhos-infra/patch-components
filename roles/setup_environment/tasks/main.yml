---
- name: Clean previous and create tmp_dir for all the building
  register: tmp_dir_shell
  shell: "rm -rf tmp.patch_rpm*; mktemp -d --tmpdir tmp.patch_rpm.XXXXXXXX"
  args:
      warn: no
  tags: skip_ansible_lint

- name: Set tmp_dir for all the building
  set_fact: tmp_dir="{{ ansible_env.HOME }}"
  tags: always

- name: Remove and create logs dir
  file:
      path: "{{ tmp_dir }}/logs/"
      state: "{{ item }}"
  with_items:
      - absent
      - directory

- name: Remove dist-git folder
  file:
      path: "{{ tmp_dir }}/dist-git"
      state: absent

# To copy the component to remote host
- name: Install rsync
  become: yes
  yum:
      name='rsync'
      state=present
  register: task_result
  until: task_result is success
  retries: 3
  delay: 3
  tags: copy-extra-components

#synchronize:copy
- name: Copy component to remote host
  synchronize:
      src: "{{ item }}"
      dest: "{{ tmp_dir }}"
      use_ssh_args: "yes"
      rsync_opts: --quiet
  with_first_found:
      - "{{ install.component.path | default(omit) }}"
      - "{{ inventory_dir }}/{{ install.component.name }}"
      - "{{ inventory_dir }}/../{{ install.component.name }}"
      - "{{ inventory_dir }}/../../../{{ install.component.name }}"
      - "{{ playbook_dir }}/../{{ install.component.name }}"
  tags: copy-component

- name: Copy extra components to remote host
  vars:
      extra_component_locations:
          - "{{ item | default(omit) }}"
          - "{{ inventory_dir }}/{{ item }}"
          - "{{ inventory_dir }}/../{{ item }}"
          - "{{ inventory_dir }}/../../../{{ item }}"
          - "{{ playbook_dir }}/../{{ item }}"
  synchronize:
      src: "{{ lookup('first_found', extra_component_locations) }}"
      dest: "{{ tmp_dir }}"
      use_ssh_args: "yes"
      rsync_opts: --quiet
  with_items: "{{ install.extra.components.split(',') }}"
  when: install.get('extra', {}).get('components', {}) | default('')
  tags: copy-extra-components
