- name: recreate /tmp/patched required by maven-chain-builder
  file:
      path: '/tmp/patched'
      state: "{{ item }}"
  with_items:
    - absent
    - directory

- name: copy component to /tmp/patched
  shell: "cp -pr {{ tmp_dir }}/{{ install.component.name }} /tmp/patched/"

- name: Add dummy entries to /etc/hosts file to prevent communication with upstream
  lineinfile:
      dest="/etc/hosts"
      insertafter=EOF
      line="{{ item }}"
  with_items:
      - '127.1.0.1   nexus.opendaylight.org'
      - '127.1.0.2   repo.maven.apache.org'
      - '127.1.0.3   oss.sonatype.org'
      - '127.1.0.4   registry.npmjs.org'

- name: enable rhelosp-rhel..rhscl repo to install maven from
  shell: "yum-config-manager --enable rhelosp-rhel-$(. /etc/os-release; echo $VERSION_ID)-rhscl"

- name: Install maven and deps RPMs required for the build
  yum: name="{{ item }}" state=present
  with_items:
      - mock
      - rh-maven33-maven
      - docker

- name: Remove old mvn binaries
  shell: "rm -f /usr/bin/mvn*"

- name: Make maven (mvn) available in $PATH
  shell: "ln -s /opt/rh/rh-maven33/root/usr/bin/* /usr/bin/"
  ignore_errors: no

- name: Install Maven PME
  shell: |
      export MAVEN_HOME=$(mvn --version | awk '$0 ~ /Maven home:/ {print $3}')
      wget http://repo1.maven.org/maven2/org/commonjava/maven/ext/pom-manipulation-ext/1.15/pom-manipulation-ext-1.15.jar -P $MAVEN_HOME/lib/ext

- name: Install m2 settings
  command: "cp {{ tmp_dir }}/dist-git/{{ component_dist_git_name }}/scripts/config/settings.xml.mead /opt/rh/rh-maven33/root/usr/share/maven/conf/settings.xml"

- name: disable 'snapshots' profile in m2 settings - https://bugs.eclipse.org/bugs/show_bug.cgi?id=507612
  replace:
      path: '/opt/rh/rh-maven33/root/usr/share/maven/conf/settings.xml'
      regexp: '(<activeProfile>opendaylight-snapshots</activeProfile>$)'
      replace: '<!-- \1 -->'
      backup: yes

- name: use a load balancer address of download.eng.* to pickup the closest location automagically
  replace:
      path: '/opt/rh/rh-maven33/root/usr/share/maven/conf/settings.xml'
      regexp: 'download.eng.*.redhat.com'
      replace: 'download.engineering.redhat.com'

- name: remove maven-chain-builder directory
  file:
      path: '{{ tmp_dir }}/maven-chain-builder'
      state: absent

- name: Clone maven-chain-builder
  git: repo=https://github.com/wznoinsk/maven-chain-builder.git
       dest='{{ tmp_dir }}/maven-chain-builder'
       accept_hostkey=true

- name: Prepare chain file
  args:
      chdir: "{{ tmp_dir}}/dist-git/opendaylight"
  shell: |
      git config --system http.sslverify false
      # sed -i "s/\$TAG_TO_BUILD/rhos-{{ install.component.version}}.0-patches/g" {{ tmp_dir}}/dist-git/opendaylight/make-vars
      # {{ tmp_dir}}/dist-git/opendaylight/make-vars
      make respin
      cp opendaylight-chain/opendaylight-chain.ini {{ tmp_dir}}/maven-chain-builder/
      git checkout -- make-vars && git checkout -- opendaylight-chain/opendaylight-chain.ini

- name: Run maven-chain-builder to build the opendaylight karaf distribution (logs in /var/log/maven/)
  args:
      chdir: "{{ tmp_dir }}/maven-chain-builder"
  shell: "python maven-chain-builder.py opendaylight-chain.ini {{ install.component.name }}"
  register: build_opendaylight
  until: build_opendaylight.rc == 0
  # it may fail because of MEAD server not responding on time, we'll retry a couple of times
  retries: 5
  delay: 10
  # we don't want to fail here to be able to collect logs
  ignore_errors: true

- name: set karaf distribution tar.gz fact - the original package name
  register: odl_karaf_package_fullpath
  shell: find /tmp/org/opendaylight/ -name "*vpnservice-karaf*.tar.gz" | head -1
  tags: odl_package_rpm

- name: set parent dir fact of the original karaf distribution
  set_fact:
      odl_karaf_package_basename: "{{ odl_karaf_package_fullpath.stdout | basename }}"
  tags: odl_package_rpm

#- name: set path dir fact of the original karaf distribution
#  set_fact:
#      odl_orig_karaf_path: "{{ odl_orig_karaf_package.stdout | splitext | first | splitext | first}}"
#  tags: odl_package_rpm
#
#- name: set destination karaf path  (version including commit id)
#  set_fact:
#      odl_karaf_dir: "karaf-0.9.9"
#  tags: odl_package_rpm

#- name: clean destination karaf path
#  file:
#      path: "{{ tmp_dir }}/{{ odl_karaf_dir }}"
#      state: absent
#  tags: odl_package_rpm
#
#- name: set destination karaf package path
#  set_fact:
#      odl_karaf_package: "{{ odl_karaf_dir }}.tar.gz"
#  tags: odl_package_rpm

#- name: rename the karaf distribution version to a high-number with commit id so yum update will see it as update
#  shell: |
#      set -e
#      tar -zx -C {{ odl_orig_karaf_parentdir }} -f {{ odl_orig_karaf_package.stdout }}
#      mv {{ odl_orig_karaf_path }}/ {{ tmp_dir }}/{{ odl_karaf_dir }}
#      tar zc -C {{ tmp_dir }} -f {{ odl_karaf_package }} {{ odl_karaf_dir }}
#  tags: odl_package_rpm

- name: Clone "integration-packaging" required to package OpenDaylight karaf distro into RPM
  git:
      repo: 'https://github.com/wznoinsk/integration-packaging'
      dest: "{{ tmp_dir }}/integration-packaging"
      version: 'master'
      accept_hostkey: yes
  tags:
      - integration-packaging
      - odl_package_rpm

- name: create logs directory for OpenDaylight patching and RPM building
  file:
      path: "{{ tmp_dir }}/integration-packaging/logs"
      state: "{{ item }}"
  with_items:
      - absent
      - directory
  tags: odl_package_rpm

- name: Package OpenDaylight into RPM
  shell: |
      set -e
      rm -rf {{ tmp_dir }}/integration-packaging/packages/cache/*
      rm -f {{ tmp_dir }}/integration-packaging/packages/Dockerfile
      cd {{ tmp_dir }}/integration-packaging/packages/rpm
      ln -s rpm/Dockerfile ../Dockerfile && cd ..
      sudo setenforce 0
      sudo systemctl restart docker

      docker build -t "odl_rpm" . | tee {{ tmp_dir }}/integration-packaging/logs/integration-packaging_docker-build-odl_rpm.log 2>&1

      cp {{ odl_karaf_package_fullpath.stdout }} .
      cp /home/cloud-user/dist-git/opendaylight/opendaylight.service .

      docker run \
      -v $(pwd):/build \
      -v {{ tmp_dir }}:{{ tmp_dir }} \
      odl_rpm \
      --rpm direct \
      --pkg_version {{ component_patch_commitid.stdout }}.commit \
      --pkg_distro el7ost \
      --download_url /build/{{ odl_karaf_package_basename }} \
      --spec_template_path /home/cloud-user/dist-git/opendaylight/opendaylight.spec.tmpl \
      --spec_template_type cheetah \
      --distro_name_prefix vpnservice-karaf \
      --keep_distro_name True \
      --service_file_url /build/opendaylight.service \
      --keep_service_file_name True \
      | tee {{ tmp_dir }}/integration-packaging/logs/integration-packaging_docker-run-odl_rpm.log 2>&1
  register: patch_opendaylight
  tags: odl_package_rpm
  # we don't want to fail here to be able to collect logs
  ignore_errors: true

- name: Save patching logs - OpenDaylight
  become: yes
  shell: |
      cp {{ tmp_dir }}/integration-packaging/logs/* {{ logdir }}
      cp /var/log/maven/* {{ logdir }}
  changed_when: true
  ignore_errors: true
  tags: logs

- name: Remove dummy entries from /etc/hosts preventing communication with upstream
  lineinfile:
      dest="/etc/hosts"
      state=absent
      line="{{ item }}"
  with_items:
      - '127.1.0.1   nexus.opendaylight.org'
      - '127.1.0.2   repo.maven.apache.org'
      - '127.1.0.3   oss.sonatype.org'
      - '127.1.0.4   registry.npmjs.org'

- name: fail if patching was not successful
  fail:
      msg: "OpenDaylight patching not successful, check {{ logdir }}"
  when: patch_opendaylight is not defined or patch_opendaylight.rc != 0

# Create directory to hold the RPMs only if patching successful
- name: "Create '{{ patchedrpmdir }}' directory"
  become: yes
  file:
      path="{{ patchedrpmdir }}"
      state="{{ item }}"
      mode=0777
  with_items:
      - absent
      - directory
  tags: patched_rpms_repo

- name: Copy new generated RPMs to /patched_rpms - OpenDaylight
  shell: "cp {{ tmp_dir }}/integration-packaging/packages/cache/*.noarch.rpm /patched_rpms/"
  tags: patched_rpms_repo


