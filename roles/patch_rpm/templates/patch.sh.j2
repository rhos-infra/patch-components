#!/bin/sh -x

git config --global user.name `whoami` || { echo "failed git config user.name"; exit 1;} 
git config --global user.email `whoami`@redhat.com || { echo "failed git config user.email"; exit 1;} 

SHA=$(egrep Source0 *spec|egrep -o '[0-9a-f]*\.t'|sed -e 's!\.t$!!')


if [[ -z "$SHA" ]]; then
        echo "MISSING SHA1 PARAMETER"
        exit 1;
fi

if ! grep -q "patches_ignore=DROP-IN-RPM" *spec; then
        echo "MISSING RDOPKG HINT IN THE SPEC:"
        perl -pi -e '$_ = "
# patches_ignore=DROP-IN-RPM
# patches_base='$SHA'
\n$_" if /BuildArch:\s*noarch/' *spec
        cat <<EOF
EOF

git commit -a -m "Add patches_ignore and patches_base"  || { echo "failed git commit"; exit 1;} 
fi

echo ">> Adding remotes:"
git remote add upstream https://github.com/openstack/{{ install.component.name }} || { echo "failed git remote add upstream"; exit 1;} 
git remote add -f patches {{ tmp_dir}}/{{ install.component.name }} || { echo "failed git remote add patches"; exit 1;} 
git fetch --all --tags || { echo "failed git fetch"; exit 1;} 


# actual work:
BRANCH=$(git branch |grep '*'|cut -f 2 -d\ )
PATCH_BRANCH=${BRANCH/rhel?*/patches}

echo ">> Retrieving patches from $PATCH_BRANCH:"
git checkout $PATCH_BRANCH || { echo "failed git checkout " $PATCH_BRANCH; exit 1;}
if (git rebase $SHA &> rebase_log); then 
   if (! grep -q "Applying: RHOS:  use internal gerrit - DROP-IN-RPM" rebase_log); then
         git rebase --abort || { echo "failed git rebase abort"; exit 1;}
         git rebase $SHA -s ours  $PATCH_BRANCH || { echo "failed git rebase"; exit 1;}
   fi
else
    echo "rebase sucess"
fi

git push --set-upstream patches --force || { echo "failed git push"; exit 1;}
git checkout $BRANCH || { echo "failed git checkout " $BRANCH; exit 1;} 
rdopkg patch || { echo "failed rdopkg"; exit 1;} 
